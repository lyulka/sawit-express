{"ast":null,"code":"const commaFormatter = value => {\n  const decPlaces = 2;\n  const decSep = \".\";\n  const thouSep = \",\";\n  var sign = value < 0 ? \"-\" : \"\";\n  var i = String(parseInt(value = Math.abs(Number(value) || 0).toFixed(decPlaces)));\n  var j = (j = i.length) > 3 ? j % 3 : 0;\n  return sign + (j ? i.substr(0, j) + thouSep : \"\") + i.substr(j).replace(/(\\decSep{3})(?=\\decSep)/g, thouSep) + (decPlaces ? decSep + Math.abs(value - i).toFixed(decPlaces).slice(2) : \"\");\n};\n\nconst tonaseFormatter = value => {\n  return `${value} ton`;\n};\n\nexports.formatMoney = currency => {\n  switch (currency) {\n    case 'rupiah':\n      return rupiahFormatter;\n\n    case 'tonase':\n      return tonaseFormatter;\n\n    default:\n      return rupiahFormatter;\n  }\n};","map":{"version":3,"sources":["/mnt/c/Users/Strelka/OneDrive - connect.hku.hk/sawit/src/Utilities/Formatter.js"],"names":["commaFormatter","value","decPlaces","decSep","thouSep","sign","i","String","parseInt","Math","abs","Number","toFixed","j","length","substr","replace","slice","tonaseFormatter","exports","formatMoney","currency","rupiahFormatter"],"mappings":"AAAA,MAAMA,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAMC,SAAS,GAAG,CAAlB;AACA,QAAMC,MAAM,GAAG,GAAf;AACA,QAAMC,OAAO,GAAG,GAAhB;AAEA,MAAIC,IAAI,GAAGJ,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkB,EAA7B;AACA,MAAIK,CAAC,GAAGC,MAAM,CAACC,QAAQ,CAACP,KAAK,GAAGQ,IAAI,CAACC,GAAL,CAASC,MAAM,CAACV,KAAD,CAAN,IAAiB,CAA1B,EAA6BW,OAA7B,CAAqCV,SAArC,CAAT,CAAT,CAAd;AACA,MAAIW,CAAC,GAAG,CAACA,CAAC,GAAGP,CAAC,CAACQ,MAAP,IAAiB,CAAjB,GAAqBD,CAAC,GAAG,CAAzB,GAA6B,CAArC;AAEA,SAAOR,IAAI,IACNQ,CAAC,GAAGP,CAAC,CAACS,MAAF,CAAS,CAAT,EAAYF,CAAZ,IAAiBT,OAApB,GAA8B,EADzB,CAAJ,GAEHE,CAAC,CAACS,MAAF,CAASF,CAAT,EAAYG,OAAZ,CAAoB,0BAApB,EAAgDZ,OAAhD,CAFG,IAGFF,SAAS,GAAGC,MAAM,GAAGM,IAAI,CAACC,GAAL,CAAST,KAAK,GAAGK,CAAjB,EAAoBM,OAApB,CAA4BV,SAA5B,EAAuCe,KAAvC,CAA6C,CAA7C,CAAZ,GAA8D,EAHrE,CAAP;AAIH,CAbD;;AAeA,MAAMC,eAAe,GAAIjB,KAAD,IAAW;AAC/B,SAAQ,GAAEA,KAAM,MAAhB;AACH,CAFD;;AAKAkB,OAAO,CAACC,WAAR,GAAuBC,QAAD,IAAc;AAChC,UAAQA,QAAR;AACI,SAAK,QAAL;AACI,aAAOC,eAAP;;AACJ,SAAK,QAAL;AACI,aAAOJ,eAAP;;AACJ;AACI,aAAOI,eAAP;AANR;AAQH,CATD","sourcesContent":["const commaFormatter = (value) => {\r\n    const decPlaces = 2\r\n    const decSep = \".\";\r\n    const thouSep = \",\";\r\n\r\n    var sign = value < 0 ? \"-\" : \"\";\r\n    var i = String(parseInt(value = Math.abs(Number(value) || 0).toFixed(decPlaces)));\r\n    var j = (j = i.length) > 3 ? j % 3 : 0;\r\n\r\n    return sign +\r\n        (j ? i.substr(0, j) + thouSep : \"\") +\r\n        i.substr(j).replace(/(\\decSep{3})(?=\\decSep)/g, thouSep) +\r\n        (decPlaces ? decSep + Math.abs(value - i).toFixed(decPlaces).slice(2) : \"\");\r\n}\r\n\r\nconst tonaseFormatter = (value) => {\r\n    return `${value} ton`\r\n}\r\n\r\n\r\nexports.formatMoney = (currency) => {\r\n    switch (currency) {\r\n        case 'rupiah':\r\n            return rupiahFormatter;\r\n        case 'tonase':\r\n            return tonaseFormatter;\r\n        default:\r\n            return rupiahFormatter;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}